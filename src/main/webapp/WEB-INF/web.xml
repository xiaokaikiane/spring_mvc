<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>

  <filter><!--字符的filter一定要在其他filter之前配置-->
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <!--解决post乱码-->
       <param-name>encoding</param-name>
       <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <!--顺手解决响应乱码-->
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--SpringMVC思想是一个前端控制器能拦截所有请求,并智能派发;
   这个前端控制器是一个Servlet,应该在web.xml中配置这个servlet来拦截所有请求-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>

      <!--contextConfigLocation:指定Springmvc配置文件位置-->
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/springmvc.xml</param-value>
    </init-param>

      <!--servlet启动加载,servlet原本是第一次访问创建对象;
    load-on-startup:服务器启动的时候创建对象,值越小优先级越高,越先创建对象;-->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!--/  拦截所有请求除开 jsp文件
      /*  拦截所有请求
      jsp文件是交给tomcat处理的
      所有项目的web.xml都是继承自服务器的web.xml
      DefaultServlet是tomcat中处理静态资源的
      除了jsp和Servlet都是属于静态资源
      我们自己的前端控制器的/就禁用了tomcat服务器中的DefaultServlet
      静态资源回来到DispatcherServlet(前端控制器) 看哪个方法的RequestMapping是对应的html(例子),
      结果没有,自然访问不了html
      在服务器中还有jspServlet,所以jsp自然不会被 / 拦截.
      1).服务器中的web.xml中有一个DefaultServlet是 url-pattern=/
      2).我们自己的web.xml中也为 url-pattern=/
      -->
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
      <welcome-file>success.jsp</welcome-file>
    </welcome-file-list>
</web-app>
